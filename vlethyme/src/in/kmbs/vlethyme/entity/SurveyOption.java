package in.kmbs.vlethyme.entity;

// Generated Mar 18, 2014 3:05:04 PM by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * SurveyOption generated by hbm2java
 */
@Entity
@Table(name = "survey_option", catalog = "vlethyme")
public class SurveyOption implements java.io.Serializable {

	private int id;
	private SurveyQuestion surveyQuestion;
	private Survey survey;
	private Set<SurveyAnswer> surveyAnswers = new HashSet<SurveyAnswer>(0);

	public SurveyOption() {
	}

	public SurveyOption(int id, SurveyQuestion surveyQuestion, Survey survey) {
		this.id = id;
		this.surveyQuestion = surveyQuestion;
		this.survey = survey;
	}

	public SurveyOption(int id, SurveyQuestion surveyQuestion, Survey survey, Set<SurveyAnswer> surveyAnswers) {
		this.id = id;
		this.surveyQuestion = surveyQuestion;
		this.survey = survey;
		this.surveyAnswers = surveyAnswers;
	}

	@Id
	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "survey_question_id", nullable = false)
	public SurveyQuestion getSurveyQuestion() {
		return this.surveyQuestion;
	}

	public void setSurveyQuestion(SurveyQuestion surveyQuestion) {
		this.surveyQuestion = surveyQuestion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "survey_id", nullable = false)
	public Survey getSurvey() {
		return this.survey;
	}

	public void setSurvey(Survey survey) {
		this.survey = survey;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "surveyOption")
	public Set<SurveyAnswer> getSurveyAnswers() {
		return this.surveyAnswers;
	}

	public void setSurveyAnswers(Set<SurveyAnswer> surveyAnswers) {
		this.surveyAnswers = surveyAnswers;
	}

}
